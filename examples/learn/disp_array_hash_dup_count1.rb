# http://gregpark.io/blog/ruby-group-by/
# you can generally use group_by anywhere youâ€™d be using #each or some iteration.
# The collection of objects that needs grouping (e.g., an array)
# group_by returns a hash where the keys are defined by our grouping rule, and the values are the corresponding objects from our original collection.
# {"ind"=>["ind", "ind"], "uk"=>["uk"], "usa"=>["usa", "usa"], "chin"=>["chin"], "rus"=>["rus"]}
#
cntry_code = %w(ind uk usa chin rus ind usa).group_by{|anil|anil}.keep_if{|_, anil| anil.length > 1}
# By convention, underscore is used as a variable name for a value that is not used. Unlike other variable names, it can be used multiple times in a single parallel assignment.
# In this particular case, the filter in the block is not interested in the key of the hash, but only the value of the hash, which is an array generated by group_by.
# A small point: a variation of the convention is to write a variable name that begins with an underscore.
# For example, if h we're a hash, h.each { |_k, v| .. } would signal to the reader that the hash's keys are not used in the block calculation.
p cntry_code.keys

# dup = %w(usa ind uk chin uk ind)
# dup = ["usa", "ind", "chin", "tibet", "usa", "chin", "ind"]

# .group_by{|e| e} groups all similar country's and transfers into new variable 'e', and returns a hash
                 # ex: {"ind"=>["ind", "ind"], "uk"=>["uk"], "usa"=>["usa", "usa"], "chin"=>["chin"], "rus"=>["rus"]}
# keep_if â†’ Enumerator : Deletes every element of self for which the given block evaluates to false.

# in Ruby .map method is used to transform the contents of an array according specified set of rules
# defined inside the code block K is keys and V is values
country = cntry_code.map{|k, v| {k => v.length}}
# country = dups.map{|a, b| {a => b.count}}

p country

=begin
cheeses = ["muenster", "extra sharp cheddar", "white cheddar", "pepper jack", "beer cheddar"]
puts cheeses.select { |cheese| cheese.include?("cheddar") }

p cheeses.keep_if { |cheese| cheese.include?("cheddar") }

p cheeses.keep_if { |c| c}
=end