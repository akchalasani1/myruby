git add -A  ( to add all files to staging)

git commit -m (saving them on staging)

git push (push the latest files to repo)

git pull (pulls the latest stuff)

git status (show what's new or modified files)

git branch (show if you are on master or branch)

git merge <branch> ( merging the latest on the branch to master)

git merge --no-ff <branch>  ( fast forward )

git checkout -b <branch> (to create a new branch)

git checkout master  ( to switch to master )

git checkout <branch> ( to switch to branch )

git log or git lg1 (to check the logs of commits done)

git diff (show the differences done to each file)

git clone https://github.com/akchalasani1/myruby.git (download the repo to your local folder)

git commit -am “comment”  (doesn't work if new file ADDING only for modified)

git add . && git commit -am "comment" (works for new files and modified)

git fetch && git checkout <branch> ( To Switch branch from master to branch)



#### Git Features ####
Anils-MacBook-Air:myruby anil$ git config --global --edit

[alias]
    lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

Additionally you an alias:
[alias]
    ac = commit -a -m
Then you can use it like this:
git ac "commit message"


Your editor

$ git config  - -global core.editor atom. (Atom or what ever text editor you like sub lime)
