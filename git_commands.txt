git add -A  ( to add all files)

git commit -m

git push

git pull

git status

git branch

git merge <branch>

git checkout

git log or git lg1

git diff

git clone

git checkout -b
<branch>

git commit -am “comment”

git fetch && git checkout <branch> ( To Switch branch from master to branch)



#### Git Features ####
Anils-MacBook-Air:myruby anil$ git config --global --edit

[alias]
    lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

Additionally you an alias:
[alias]
    ac = commit -a -m
Then you can use it like this:
git ac "commit message"


Your editor

$ git config  - -global core.editor atom. (Atom or what ever text editor you like sub lime)
